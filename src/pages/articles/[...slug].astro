---
// @ts-nocheck
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import Prose from "../../components/Prose.astro";
import RelatedArticles from "../../components/RelatedArticles.astro";

// Format date
const formattedDate = (date: Date) =>
  date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });

// Fetch and filter article collection based on draft boolean
export async function getStaticPaths() {
  const entries = await getCollection("articles");
  const filteredEntries = entries.filter((entry) => !entry.data.draft);

  return filteredEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;

// Redirect to 404 if Article not found
if (!entry) {
  return Astro.redirect("/404");
}
const { Content } = await entry.render();

// Calculate reading time based on words per minute
function calculateReadingTime(text: string, wordsPerMinute = 200): number {
  const words = text.split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
}

const readingTime = calculateReadingTime(entry.body);
---

<MainLayout title=`${entry.data.plainTitle}` frontmatter={entry.data}>
  <Prose>
    <h3>{entry.data.title}</h3>
    <p class="font-mono">
      Written on {formattedDate(entry.data.pubDate)} - {readingTime} min read
    </p>
    <Content />
  </Prose>
  <RelatedArticles entry={entry} />
</MainLayout>
